<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/server.proto

namespace Xelbot\Com\Autonotes;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>xelbot.com.autonotes.Cost</code>
 */
class Cost extends \Google\Protobuf\Internal\Message
{
    /**
     * integer value, decimal(8, 2) in MySQL
     *
     * Generated from protobuf field <code>int32 value = 1;</code>
     */
    protected $value = 0;
    /**
     * currency code, for example RUB
     *
     * Generated from protobuf field <code>string currency = 2;</code>
     */
    protected $currency = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $value
     *           integer value, decimal(8, 2) in MySQL
     *     @type string $currency
     *           currency code, for example RUB
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Server::initOnce();
        parent::__construct($data);
    }

    /**
     * integer value, decimal(8, 2) in MySQL
     *
     * Generated from protobuf field <code>int32 value = 1;</code>
     * @return int
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * integer value, decimal(8, 2) in MySQL
     *
     * Generated from protobuf field <code>int32 value = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkInt32($var);
        $this->value = $var;

        return $this;
    }

    /**
     * currency code, for example RUB
     *
     * Generated from protobuf field <code>string currency = 2;</code>
     * @return string
     */
    public function getCurrency()
    {
        return $this->currency;
    }

    /**
     * currency code, for example RUB
     *
     * Generated from protobuf field <code>string currency = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setCurrency($var)
    {
        GPBUtil::checkString($var, True);
        $this->currency = $var;

        return $this;
    }

}

