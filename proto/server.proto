syntax = "proto3";

package xelbot.com.autonotes;

option go_package = "xelbot.com/auto-notes/server/proto";
option php_namespace = "AutoNotes";
option php_metadata_namespace = "AutoNotes\\Meta";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

message LoginRequest {
  string username = 1;
  string password = 2;
}

message RefreshTokenRequest {
  string token = 1;
}

message LoginResponse {
  string token = 1;
}

service Auth {
  rpc GetToken(LoginRequest) returns (LoginResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (LoginResponse);
}

message Limit {
  int32 limit = 1;
}

message Cost {
  // integer value, decimal(8, 2) in MySQL
  int32 value = 1;
  // currency code, for example RUB
  string currency = 2;
}

message Car {
  int32 id = 1;
  string name = 2;
  string vin = 3;
  int32 year = 4;
  bool default = 5;
  google.protobuf.Timestamp created_at = 6;
}

message CarCollection {
  repeated Car cars = 1;
}

message FillingStation {
  int32 id = 1;
  string name = 2;
  google.protobuf.Timestamp created_at = 3;
}

message FillingStationCollection {
  repeated FillingStation stations = 1;
}

message Fuel {
  int32 id = 1;
  Cost cost = 2;
  // integer value, decimal(8, 2) in MySQL
  int32 value = 3;
  FillingStation station = 4;
  google.protobuf.Timestamp date = 5;
  int32 distance = 6;
  Car car = 7;
  google.protobuf.Timestamp created_at = 8;
}

message FuelCollection {
  repeated Fuel fuels = 1;
}

message Currency {
  int32 id = 1;
  string name = 2;
  // currency code, for example RUB
  string code = 3;
  bool default = 4;
  google.protobuf.Timestamp created_at = 5;
}

message DefaultCurrency {
  Currency currency = 1;
  bool found = 2;
}

message CurrencyCollection {
  repeated Currency currencies = 1;
}

message UserSettings {
  int32 id = 1;
  Car default_car = 2;
  Currency default_currency = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
}

service UserRepository {
  rpc GetCars(google.protobuf.Empty) returns (CarCollection);
  rpc GetCurrencies(google.protobuf.Empty) returns (CurrencyCollection);
  rpc GetDefaultCurrency(google.protobuf.Empty) returns (DefaultCurrency);
  rpc GetUserSettings(google.protobuf.Empty) returns (UserSettings);
  rpc SaveUserSettings(UserSettings) returns (UserSettings);
}

service FuelRepository {
  rpc GetFuels(Limit) returns (FuelCollection);
  rpc GetFillingStations(google.protobuf.Empty) returns (FillingStationCollection);
  rpc SaveFuel(Fuel) returns (Fuel);
}
